- platform: template
  covers:
    bedroom_curtain:
      unique_id: bedroom_curtains
      device_class: curtain
      icon_template: >-
        {% if (states('sensor.switchbot_bedroom_curtain') | int(0)) < 90 %}
          mdi:curtains
        {% else %}
          mdi:curtains-closed
        {% endif %}
      friendly_name: "Bedroom Curtains"
      value_template: "{{ is_state('sensor.switchbot_bedroom_curtain', '0') | iif('open', 'closed') }}"
      position_template: "{{ states('sensor.switchbot_bedroom_curtain') | float(0) }}"
      open_cover:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_bedroom_deviceId
          command: "turnOn"
      close_cover:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_bedroom_deviceId
          command: "turnOff"
      stop_cover:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_bedroom_deviceId
          command: "turnOff"
      set_cover_position:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_bedroom_deviceId
          command: "setPosition"
          parameter: "0,ff,{{100-position}}"
    office_curtain:
      unique_id: office_curtains
      device_class: curtain
      icon_template: >-
        {% if (states('sensor.switchbot_office_curtain') | int(0)) < 90 %}
          mdi:curtains
        {% else %}
          mdi:curtains-closed
        {% endif %}
      friendly_name: "Office Curtains"
      value_template: "{{ is_state('sensor.switchbot_office_curtain', '0') | iif('open', 'closed') }}"
      position_template: "{{ states('sensor.switchbot_office_curtain') | float(0) }}"
      open_cover:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_office_deviceId
          command: "turnOn"
      close_cover:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_office_deviceId
          command: "turnOff"
      stop_cover:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_office_deviceId
          command: "turnOff"
      set_cover_position:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_office_deviceId
          command: "setPosition"
          parameter: "0,ff,{{100-position}}"
    bedroom_light_curtain:
      unique_id: bedroom_light_curtain
      device_class: curtain
      icon_template: >-
        {% if (states('sensor.switchbot_bedroom_light_curtain') | int(0)) < 90 %}
          mdi:curtains
        {% else %}
          mdi:curtains-closed
        {% endif %}
      friendly_name: "Bedroom Light Curtains"
      value_template: "{{ is_state('sensor.switchbot_bedroom_light_curtain', '0') | iif('open', 'closed') }}"
      position_template: "{{ states('sensor.switchbot_bedroom_light_curtain') | float(0) }}"
      open_cover:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_lounge_deviceId
          command: "turnOn"
      close_cover:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_lounge_deviceId
          command: "turnOff"
      set_cover_position:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_lounge_deviceId
          command: "setPosition"
          parameter: "0,ff,{{100-position}}"
    hall_curtain:
      unique_id: hall_curtain
      device_class: curtain
      icon_template: >-
        {% if (states('sensor.switchbot_hall_curtain') | int(0)) < 90 %}
          mdi:curtains
        {% else %}
          mdi:curtains-closed
        {% endif %}
      friendly_name: "Front Door Curtain"
      value_template: "{{ is_state('sensor.switchbot_hall_curtain', '0') | iif('open', 'closed') }}"
      position_template: "{{ states('sensor.switchbot_hall_curtain') | float(0) }}"
      open_cover:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_hall_deviceId
          command: "turnOn"
      close_cover:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_hall_deviceId
          command: "turnOff"
      stop_cover:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_hall_deviceId
          command: "turnOff"
      set_cover_position:
        service: rest_command.switchbot_device_command
        data:
          deviceId: !secret switchbot_hall_deviceId
          command: "setPosition"
          parameter: "0,ff,{{100-position}}"
    patio_doors:
      unique_id: patio_doors
      device_class: garage
      friendly_name: "Patio Doors"
      value_template: "{{ is_state('binary_sensor.patio_door_contact', 'off') and is_state('lock.patio_door_left', 'locked') and is_state('lock.patio_door_right', 'locked') | iif('closed', 'open') }}"
      open_cover:
        service: lock.unlock
        entity_id:
          - lock.patio_door_right
          - lock.patio_door_left
      close_cover:
        service: lock.lock
        target:
          entity_id:
            - lock.patio_door_left
            - lock.patio_door_right
    patio_blinds:
      device_class: window
      unique_id: patio_blinds
      friendly_name: "Patio Blinds"
      open_cover:
        service: script.open_living_room_blinds
      close_cover:
        service: script.lounge_blinds_close
        data:
          modus: "close"
      stop_cover:
        service: cover.stop_cover
        target:
          entity_id:
            - cover.vertical_open
            - cover.vertical_rotate
      set_cover_position:
        service: cover.set_cover_position
        data:
          position: "{{ position }}"
        target:
          entity_id:
            - cover.vertical_open
      set_cover_tilt_position:
        service: cover.set_cover_position
        data:
          position: "{{ tilt }}"
        target:
          entity_id:
            - cover.vertical_rotate
      # value_template: "{{ states('cover.vertical_open') }}"
      position_template: "{{ state_attr('cover.vertical_open', 'position') | float(100) }}"
      tilt_template: "{{ state_attr('cover.vertical_rotate', 'position') | float(50) }}"
      icon_template: >-
        {% if is_state('cover.vertical_open', 'open') %}
          mdi:door-sliding
        {% else %}
          mdi:blinds-vertical-closed
        {% endif %}
    homekit_vertical_rotate:
      device_class: window
      unique_id: homekit_vertical_rotate
      friendly_name: "Patio Blind Vertical Rotate"
      open_cover:
        service: cover.open_cover
        target:
          entity_id:
            - cover.vertical_rotate
      close_cover:
        service: cover.close_cover
        target:
          entity_id:
            - cover.vertical_rotate
      stop_cover:
        service: cover.stop_cover
        target:
          entity_id:
            - cover.vertical_rotate
      set_cover_tilt_position:
        service: cover.set_cover_position
        data:
          position: "{{ tilt }}"
        target:
          entity_id:
            - cover.vertical_rotate
      # value_template: "{{ states('cover.vertical_open') }}"
      # position_template: "{{ state_attr('cover.vertical_open', 'position') | float(100) }}"
      tilt_template: "{{ state_attr('cover.vertical_rotate', 'position') | float(50) }}"
      icon_template: >-
        {% if is_state('cover.vertical_open', 'open') %}
          mdi:door-sliding
        {% else %}
          mdi:blinds-vertical-closed
        {% endif %}
