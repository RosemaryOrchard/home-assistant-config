- id: '1628636985715'
  alias: 'Dishwasher 1: Running'
  description: ''
  trigger:
  - type: power
    platform: device
    device_id: e9add1d7cbaf9ac24247bdafa119ac3c
    entity_id: sensor.dishwasher_monitor_current_consumption
    domain: sensor
    above: 200
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.dishwasher_status
      state: Running
  action:
  - service: input_select.select_option
    target:
      entity_id: input_select.dishwasher_status
    data:
      option: Running
  - service: counter.decrement
    target:
      entity_id: counter.dishwasher_refills_remaining
  mode: single
- id: '1634247341320'
  alias: 'Washing Machine 1: Running'
  description: ''
  trigger:
  - type: power
    platform: device
    device_id: 4cb07f4ed8cbd66c706783be0e291d40
    entity_id: sensor.washing_machine_monitor_current_consumption
    domain: sensor
    above: 100
    enabled: false
  - platform: numeric_state
    entity_id: sensor.washing_machine_monitor_current_consumption
    above: 100
  condition:
  - condition: state
    entity_id: input_select.washing_machine_status
    state: Idle
    enabled: true
  action:
  - service: input_select.select_option
    target:
      entity_id: input_select.washing_machine_status
    data:
      option: Running
  mode: single
- id: '1635557895849'
  alias: 'Washing Machine 2: Finishing'
  description: ''
  trigger:
  - type: power
    platform: device
    device_id: 4cb07f4ed8cbd66c706783be0e291d40
    entity_id: sensor.washing_machine_monitor_current_consumption
    domain: sensor
    below: 100
    for:
      hours: 0
      minutes: 3
      seconds: 0
  condition:
  - condition: state
    entity_id: input_select.washing_machine_status
    state: Running
  action:
  - service: input_select.select_option
    target:
      entity_id: input_select.washing_machine_status
    data:
      option: Finishing
  mode: single
- id: '1635558163655'
  alias: 'Washing Machine 3: Clean'
  description: ''
  trigger:
  - type: power
    platform: device
    device_id: 4cb07f4ed8cbd66c706783be0e291d40
    entity_id: sensor.washing_machine_monitor_current_consumption
    domain: sensor
    below: 5
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  condition:
  - condition: state
    entity_id: input_select.washing_machine_status
    state: Finishing
  action:
  - service: input_select.select_option
    target:
      entity_id: input_select.washing_machine_status
    data:
      option: Clean
  - service: notify.standard
    data:
      title: Washing Machine has Finished
      message: Empty it now.
  - service: shopping_list.add_item
    data:
      name: Empty the washing machine
  mode: single
- id: '1635675397925'
  alias: 'Tumble Dryer 1: Drying'
  description: ''
  trigger:
  - type: power
    platform: device
    device_id: 92224f9cfbf922e97724f6754d21f7b5
    entity_id: sensor.tumble_dryer_monitor_current_consumption
    domain: sensor
    above: 100
    for:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  condition: []
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.tumble_dryer_status
      option: Drying
  mode: single
- id: '1635802296533'
  alias: 'Tumble Dryer 2: Needs Emptying'
  description: ''
  trigger:
  - type: power
    platform: device
    device_id: 92224f9cfbf922e97724f6754d21f7b5
    entity_id: sensor.tumble_dryer_monitor_current_consumption
    domain: sensor
    below: 100
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_select.tumble_dryer_status
      state: Drying
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.tumble_dryer_door_contact
      state: 'off'
  action:
  - service: input_select.select_option
    data:
      option: Needs Emptying
    target:
      entity_id: input_select.tumble_dryer_status
  - service: notify.standard
    data:
      title: Tumble Dryer has Finished
      message: Empty it now
  mode: single
- id: '1635806770670'
  alias: Water Jug Filter Days Remaining Decrement
  description: ''
  trigger:
  - platform: time
    at: 01:00
  condition: []
  action:
  - service: counter.decrement
    target:
      entity_id: counter.water_jug_filter
  mode: single
- id: '1635889319656'
  alias: Alarm Clock with Wake Up Light
  description: ''
  use_blueprint:
    path: sbyx/wake-up-light-alarm-with-sunrise-effect.yaml
    input:
      manual_time: 08:30:00
      check_entity: binary_sensor.alarm_clock_status
      post_sunrise_actions:
      - service: cover.open_cover
        target:
          entity_id: cover.bedroom_blind
        data: {}
      - service: notify.standard
        data:
          title: Sunrise Automation
          message: Post-sunrise
      - service: rest_command.alarm_clock_end_shortcut
        data: {}
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.alarm_clock_ran
        data:
          datetime: '{{ now() }}'
      - service: script.reset_alarm_to_default
        data: {}
      light_entity: light.wake_up
      pre_sunrise_actions:
      - service: notify.standard
        data:
          title: Sunrise Automation
          message: Pre-sunrise
      - service: script.disable_alarm_if_not_at_home
        data: {}
      - service: climate.set_temperature
        target:
          entity_id: climate.bedroom_thermostat
        data:
          temperature: 18
        enabled: false
      timestamp_sensor: sensor.alarm_clock_timestamp
      sunrise_duration: 30
- id: '1635898135761'
  alias: Check if at Home after turning on alarm
  description: ''
  trigger:
  - platform: state
    entity_id: input_datetime.alarm_time
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - service: script.disable_alarm_if_not_at_home
  mode: single
- id: '1636282256212'
  alias: 'Dishwasher 4:  Clean to Dirty'
  description: ''
  trigger:
  - platform: time
    at: input_datetime.dishwasher_finishes_drying
  condition:
  - condition: state
    entity_id: input_select.dishwasher_status
    state: Clean
  action:
  - service: input_select.select_option
    target:
      entity_id: input_select.dishwasher_status
    data:
      option: Dirty
  mode: single
- id: '1636495549037'
  alias: 'Tumble Dryer 3: Empty'
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: 48b62d261d34910dd58b458a4b428e21
    entity_id: binary_sensor.tumble_dryer_door_contact
    domain: binary_sensor
  condition: []
  action:
  - service: input_select.select_option
    target:
      entity_id: input_select.tumble_dryer_status
    data:
      option: Empty
  mode: single
- id: '1636495599966'
  alias: 'Washing Machine 4: Idle'
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: df8b9c0ce4492b787a1982bd7494d9e6
    entity_id: binary_sensor.washing_machine_door_contact
    domain: binary_sensor
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.washing_machine_status
      state: Idle
  action:
  - service: input_select.select_option
    data:
      option: Idle
    target:
      entity_id: input_select.washing_machine_status
  mode: single
- id: '1636831426523'
  alias: Kitchen Device Status Change Notifications
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.dishwasher_status
    id: dishwasher
    to: Clean
    from: Drying
  - platform: state
    entity_id:
    - input_select.washing_machine_status
    id: washing_machine
    to: Clean
    from: Finishing
  - platform: state
    entity_id:
    - input_select.tumble_dryer_status
    id: tumble_dryer
    to: Needs Emptying
    from: Drying
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: dishwasher
      sequence:
      - service: rest_command.grocy_manual_chore_due
        data:
          choreId: 38
    - conditions:
      - condition: trigger
        id: washing_machine
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.washing_machine_door_contact
          state: 'on'
        then:
        - service: input_select.select_first
          data: {}
          target:
            entity_id: input_select.washing_machine_status
        - stop: ''
        else:
        - service: rest_command.grocy_manual_chore_due
          data:
            choreId: 35
            payload:
              rescheduled_date: '{{ now() + timedelta( minutes = 15 ) }}'
    - conditions:
      - condition: trigger
        id: tumble_dryer
      sequence:
      - service: rest_command.grocy_manual_chore_due
        data:
          choreId: 37
          payload:
            rescheduled_date: '{{ now() + timedelta( minutes = 15 ) }}'
    default: []
  - service: grocy.add_generic
    data:
      entity_type: tasks
      data:
        name: Empty the {{ trigger.to_state.attributes.friendly_name | replace("Status",
          "") | trim  }}
        due_date: '{{ now().year }}-{{ now().month }}-{{ now().day }}'
    enabled: false
  - service: telegram_bot.send_message
    data:
      title: '{{ trigger.to_state.attributes.friendly_name | default("Something in
        the Kitchen") }}'
      message: '{{ states(trigger.entity_id) | default("Finished") }}'
      message_tag: '{{ trigger.id }}_state'
  - if:
    - condition: state
      entity_id: media_player.philips_tv
      state: 'on'
    then:
    - service: notify.android_tv
      data:
        title: '{{ trigger.to_state.attributes.friendly_name | default("Something
          in the Kitchen") }}'
        message: '{{ states(trigger.entity_id) | default("Finished") }}'
  mode: single
- id: '1636844645498'
  alias: Energy Meter Tariff Switch
  description: ''
  trigger:
  - platform: time
    at: 00:00
  - platform: time
    at: 06:00
  condition: []
  action:
  - service: utility_meter.next_tariff
    target:
      entity_id:
      - utility_meter.daily_energy
      - utility_meter.weekly_energy
      - utility_meter.monthly_energy
  mode: single
- id: '1637004661254'
  alias: 'Lava Lamp 1: Set Turn off Time'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.lava_lamp
    not_from: 'on'
    to: 'on'
  condition: []
  action:
  - service: input_datetime.set_datetime
    target:
      entity_id: input_datetime.lava_lamp_off
    data:
      timestamp: '{{ as_timestamp(now() + timedelta( hours = 7 )) }}'
  mode: single
- id: '1637010364033'
  alias: 'Lava Lamp 2: Turn Off'
  description: ''
  trigger:
  - platform: time
    at: input_datetime.lava_lamp_off
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - light.lava_lamp
    to: 'On'
    for:
      hours: 7
      minutes: 30
      seconds: 0
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.lava_lamp
  mode: single
- id: '1637010873397'
  alias: 'Dishwasher 2: Drying'
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: fe7d0a86c8421bc652d91da338cfe9e4
    entity_id: binary_sensor.dishwasher_door_contact
    domain: binary_sensor
  condition:
  - condition: state
    entity_id: input_select.dishwasher_status
    state: Running
  action:
  - service: input_select.select_option
    target:
      entity_id: input_select.dishwasher_status
    data:
      option: Drying
  - service: fan.turn_on
    data: {}
    target:
      entity_id: fan.kitchen_extractor
  - service: input_datetime.set_datetime
    target:
      entity_id: input_datetime.dishwasher_finishes_drying
    data:
      timestamp: '{{ as_timestamp(now() + timedelta( minutes = 10 )) }}'
  mode: single
- id: '1637011165703'
  alias: 'Dishwasher 3: Finished Drying'
  description: ''
  trigger:
  - platform: time
    at: input_datetime.dishwasher_finishes_drying
  condition:
  - condition: state
    entity_id: input_select.dishwasher_status
    state: Drying
  action:
  - service: input_select.select_option
    target:
      entity_id: input_select.dishwasher_status
    data:
      option: Clean
  - service: fan.turn_off
    data: {}
    target:
      entity_id: fan.kitchen_extractor
  - service: input_datetime.set_datetime
    target:
      entity_id: input_datetime.dishwasher_finishes_drying
    data:
      timestamp: '{{ as_timestamp(now() + timedelta( hours = 1 )) }}'
  mode: single
- id: '1637147200786'
  alias: 'Alarm Clock: Notify of time set'
  description: ''
  trigger:
  - platform: time
    at: '21:00'
  - platform: homeassistant
    event: start
    id: home-assistant-start
  condition:
  - condition: and
    conditions:
    - condition: trigger
      id: home-assistant-start
    - condition: time
      after: '21:00'
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: not
          conditions:
          - condition: state
            entity_id: input_select.manual_alarm_setting
            state: Unset
        - condition: state
          entity_id: binary_sensor.workday_sensor
          state: 'off'
      sequence:
      - service: notify.log_file
        data:
          title: No alarm set
          message: No alarm set, no override set.
      - service: notify.standard
        data:
          title: No alarm set
          message: No alarm set, no override set.
    default:
    - service: notify.standard
      data:
        title: Alarm Set
        message: Alarm is set for {{ states('input_datetime.alarm_time') }} tomorrow
  mode: single
- id: '1637271399489'
  alias: 'Heating Pad Switch 1: On'
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.office_heating_pad_controller
    from: 'off'
    to: 'on'
    id: office
  - platform: state
    entity_id: input_boolean.living_room_heating_pad_controller
    from: 'off'
    to: 'on'
    id: living_room
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: office
      sequence:
      - type: turn_on
        device_id: 271d66f529a60fbdd1335c9434bd1278
        entity_id: switch.office_heating_pad
        domain: switch
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.living_room_heating_pad_controller
        data: {}
      - type: turn_off
        device_id: 9e16330576df742cd97c19c54903c753
        entity_id: switch.living_room_heating_pad
        domain: switch
    - conditions:
      - condition: trigger
        id: living_room
      sequence:
      - type: turn_on
        device_id: 9e16330576df742cd97c19c54903c753
        entity_id: switch.living_room_heating_pad
        domain: switch
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.office_heating_pad_controller
        data: {}
      - type: turn_off
        device_id: 271d66f529a60fbdd1335c9434bd1278
        entity_id: switch.office_heating_pad
        domain: switch
    default: []
  - service: script.heating_pad_heat
    data: {}
  mode: single
- id: '1637271809244'
  alias: 'Heating Pad Switch 2: Off'
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.office_heating_pad_controller
    to: 'off'
    from: 'on'
    id: office
  - platform: state
    entity_id: input_boolean.living_room_heating_pad_controller
    to: 'off'
    from: 'on'
    id: living_room
  condition: []
  action:
  - service: input_datetime.set_datetime
    target:
      entity_id: input_datetime.heating_pad_time_change
    data:
      timestamp: '{{ as_timestamp(now()) }}'
  - type: turn_off
    device_id: 271d66f529a60fbdd1335c9434bd1278
    entity_id: switch.office_heating_pad
    domain: switch
  - choose:
    - conditions:
      - condition: trigger
        id: office
      sequence:
      - type: turn_off
        device_id: 271d66f529a60fbdd1335c9434bd1278
        entity_id: switch.office_heating_pad
        domain: switch
    - conditions:
      - condition: trigger
        id: living_room
      sequence:
      - type: turn_off
        device_id: 9e16330576df742cd97c19c54903c753
        entity_id: switch.living_room_heating_pad
        domain: switch
    default: []
  mode: single
- id: '1637272487498'
  alias: Heating Pad Time
  description: ''
  trigger:
  - platform: time
    at: input_datetime.heating_pad_time_change
    id: time_trigger
  - platform: homeassistant
    event: start
    id: home_assistant
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: trigger
        id: home_assistant
      - condition: time
        after: input_datetime.heating_pad_time_change
    - condition: trigger
      id: time_trigger
  - condition: or
    conditions:
    - condition: state
      entity_id: input_boolean.office_heating_pad_controller
      state: 'on'
    - condition: state
      entity_id: input_boolean.living_room_heating_pad_controller
      state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.heating_pad_state
        state: Heat
      sequence:
      - service: script.heating_pad_pause
      - choose:
        - conditions:
          - condition: state
            entity_id: input_boolean.debug
            state: 'on'
          sequence:
          - service: notify.standard
            data:
              title: Heating Pad
              message: Pausing
        default: []
    - conditions:
      - condition: state
        entity_id: input_select.heating_pad_state
        state: Pause
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: input_boolean.debug
            state: 'on'
          sequence:
          - service: notify.standard
            data:
              title: Heating Pad
              message: Heating
        default: []
      - service: script.heating_pad_heat
    default: []
  mode: single
- id: '1637283110300'
  alias: Robot Vacuum Running
  description: ''
  trigger:
  - platform: state
    entity_id:
    - vacuum.buttercup_2_0
    from: cleaning
    to: docked
  - platform: state
    entity_id:
    - vacuum.buttercup_2_0
    from: returning
    to: docked
  condition: []
  action:
  - service: input_datetime.set_datetime
    target:
      entity_id: input_datetime.buttercup_cleaned
    data:
      date: '{{ now().strftime("%Y-%m-%d") }}'
  mode: single
- id: '1637514198181'
  alias: Home Assistant Start Checks
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - choose:
    - conditions:
      - condition: device
        type: is_on
        device_id: 93f136451d30db55dd7bf47a9bae0251
        entity_id: switch.living_room_air_freshener
        domain: switch
      sequence:
      - type: turn_off
        device_id: 93f136451d30db55dd7bf47a9bae0251
        entity_id: switch.living_room_air_freshener
        domain: switch
    default: []
  - choose:
    - conditions:
      - condition: device
        type: is_on
        device_id: 93f136451d30db55dd7bf47a9bae0251
        entity_id: switch.living_room_air_freshener
        domain: switch
      sequence:
      - type: turn_off
        device_id: 93f136451d30db55dd7bf47a9bae0251
        entity_id: switch.living_room_air_freshener
        domain: switch
    default: []
  mode: single
- id: '1637579052093'
  alias: Security Notification
  description: ''
  trigger:
  - platform: device
    device_id: b52cde9e0bda7a1606a13d4f39d567e9
    domain: lock
    entity_id: lock.yale_conexis_l1
    type: unlocked
    id: lock
  - platform: device
    device_id: a020138c924bb59a2b8ecd05bb893a3c
    domain: lock
    entity_id: lock.smart_door_lock
    type: unlocked
    id: lock
  - platform: device
    device_id: b52cde9e0bda7a1606a13d4f39d567e9
    domain: lock
    entity_id: lock.yale_conexis_l1
    type: locked
    id: lock
  - platform: device
    device_id: a020138c924bb59a2b8ecd05bb893a3c
    domain: lock
    entity_id: lock.smart_door_lock
    type: locked
    id: lock
  condition: []
  action:
  - service: notify.standard
    data:
      title: Security Notification
      message: '{{ trigger.to_state.attributes.friendly_name ~ " " ~ trigger.to_state
        }}'
  mode: single
- id: '1637885409509'
  alias: 'Living Room TV: On/Off'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.television_on
    to: 'on'
    id: 'On'
    from: 'off'
  - platform: state
    to: 'off'
    entity_id:
    - binary_sensor.television_on
    id: 'Off'
    from: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'On'
      sequence:
      - service: switch.turn_off
        target:
          entity_id:
          - switch.lights
        data: {}
      - if:
        - condition: not
          conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: cover.vertical_rotate
              attribute: position
              state: '0'
            - condition: state
              entity_id: cover.vertical_rotate
              attribute: position
              state: '100'
        then:
        - service: cover.close_cover
          target:
            entity_id:
            - cover.vertical_rotate
          data: {}
    - conditions:
      - condition: trigger
        id: 'Off'
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.100126cbfc_1
          - switch.lights
        data: {}
      - choose:
        - conditions:
          - condition: state
            entity_id: binary_sensor.dark_lounge
            state: 'off'
          sequence:
          - service: script.open_living_room_blinds
            data: {}
        default: []
    default: []
  mode: single
- id: '1637885411110'
  alias: 'Living Room TV: Media Controls Lights'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.television_active
    to: 'on'
    id: 'On'
    from: 'off'
  - platform: state
    entity_id:
    - binary_sensor.television_active
    to: 'off'
    id: 'Off'
    from: 'on'
  - platform: state
    id: 'On'
    entity_id:
    - media_player.living_room_apple_tv
    not_from: playing
    to: playing
  - platform: state
    id: 'Off'
    entity_id:
    - media_player.living_room_apple_tv
    from: playing
    not_to: playing
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'On'
      sequence:
      - if:
        - condition: state
          entity_id: light.hallway_overhead
          state: 'on'
        then:
        - service: light.turn_off
          target:
            entity_id: light.hallway_overhead
          data: {}
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: binary_sensor.dark_lounge
            state: 'on'
          - condition: state
            entity_id: light.living_room_main_lights
            state: 'on'
          enabled: true
        then:
        - if:
          - condition: state
            entity_id: light.living_room_main_lights
            state: 'on'
          then:
          - service: scene.create
            data:
              scene_id: living_room_lights
              snapshot_entities:
              - light.living_room_overhead
              - light.light_panels
        - service: scene.turn_on
          target:
            entity_id: scene.living_room_dimmed
          data:
            transition: 10
    - conditions:
      - condition: trigger
        id: 'Off'
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.dark_lounge
          state: 'on'
        then:
        - service: scene.turn_on
          data:
            transition: 20
          target:
            entity_id: scene.living_room_lights
    default: []
  mode: single
- id: '1637886815823'
  alias: 'Living Room: Occupied'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.presence_lounge
    id: 'on'
    to: 'on'
    from: 'off'
  - platform: state
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: 'off'
    entity_id:
    - binary_sensor.living_room_occupied
    from: 'on'
  condition:
  - condition: or
    conditions:
    - condition: trigger
      id: 'off'
    - condition: and
      conditions:
      - condition: trigger
        id: 'on'
      - condition: state
        entity_id: binary_sensor.dark_lounge
        state: 'on'
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.rose_state
      state: Sleep
  - condition: numeric_state
    entity_id: zone.home
    above: 0
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: 'on'
        - condition: state
          entity_id: binary_sensor.presence_lounge
          state: 'on'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: binary_sensor.television_on
            state: 'on'
          sequence:
          - service: light.turn_on
            data:
              brightness_pct: 20
            target:
              entity_id: light.living_room_main_lights
        default:
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id: light.living_room_main_lights
    default:
    - service: light.turn_off
      target:
        entity_id: light.living_room_main_lights
      data: {}
  mode: queued
- id: '1638241109982'
  alias: Heating Pad Choice
  description: Accurate
  trigger:
  - platform: state
    entity_id: input_select.heating_pad_selector
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.heating_pad_selector
        state: Living Room
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.office_heating_pad_controller
    - conditions:
      - condition: state
        entity_id: input_select.heating_pad_selector
        state: Office
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.living_room_heating_pad_controller
    default: []
  mode: single
- id: '1638277900689'
  alias: Office Chair Sensor
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.office_chair_sensor_action
  - platform: state
    entity_id: sensor.office_chair_sensor_angle_x
  - platform: state
    entity_id: sensor.office_chair_sensor_angle_y
  - platform: state
    entity_id: sensor.office_chair_sensor_angle_z
  condition: []
  action:
  - service: notify.standard
    data:
      title: Title {{ trigger.to_state.attributes.friendly_name }}
      message: Message {{ states(trigger.entity_id) }}
  mode: single
- id: '1638485531118'
  alias: 'Presence: Home'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: zone.home
    for:
      hours: 0
      minutes: 5
      seconds: 0
    below: 1
    id: noone
  - platform: numeric_state
    entity_id: zone.home
    for:
      hours: 0
      minutes: 0
      seconds: 0
    above: 0
    id: someone
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: noone
      sequence:
      - service: alarm_control_panel.alarm_arm_away
        target:
          entity_id:
          - alarm_control_panel.3d_print_cam
          - alarm_control_panel.entryway
          - alarm_control_panel.home
          - alarm_control_panel.kitchen
          - alarm_control_panel.living_room
        data: {}
      - service: script.run_the_robot_vacuum_today
        data: {}
      - service: script.lounge_blinds_close
        data: {}
      - service: light.turn_off
        data: {}
        target:
          entity_id: '{{ states.light | rejectattr(''entity_id'', ''in'', area_entities(''Christmas''))
            | map(attribute=''entity_id'') | list }}'
    - conditions:
      - condition: trigger
        id: someone
      sequence:
      - service: alarm_control_panel.alarm_arm_home
        target:
          entity_id:
          - alarm_control_panel.3d_print_cam
          - alarm_control_panel.entryway
          - alarm_control_panel.home
          - alarm_control_panel.kitchen
          - alarm_control_panel.living_room
        data: {}
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.living_room_air_freshener
          - switch.bedroom_air_freshener
      - service: script.open_living_room_blinds
        data: {}
    default: []
  mode: single
- id: '1638644179725'
  alias: 'Time: Sunset'
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: '0'
    id: sunset
  - platform: state
    entity_id:
    - binary_sensor.night_time
    from: 'off'
    to: 'on'
    id: nighttime
  - platform: homeassistant
    event: start
    id: ha_start
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.night_time
      state: 'on'
    - condition: sun
      after: sunset
  - condition: template
    value_template: '{{ (state_attr(''script.sunset'', ''last_triggered'') | as_timestamp)
      < ( states.sun.sun.last_changed | as_timestamp) }}'
  action:
  - service: script.sunset
    data: {}
  mode: single
- id: '1638741324812'
  alias: 'Kitchen: Occupied'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.kitchen_occupied
    to: 'on'
    from: 'off'
    id: 'on'
  - platform: state
    entity_id: binary_sensor.kitchen_occupied
    to: 'off'
    from: 'on'
    id: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: state
        entity_id: binary_sensor.dark_kitchen
        state: 'on'
      - condition: trigger
        id: 'on'
    - condition: trigger
      id: 'off'
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: 'on'
        - condition: state
          entity_id: binary_sensor.kitchen_occupied
          state: 'on'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          area_id: kitchen
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          area_id: kitchen
    default: []
  mode: single
- id: '1638921225675'
  alias: 'Electric Blanket: Off at Time'
  description: ''
  trigger:
  - platform: time
    at: input_datetime.electric_blanket_off
    id: time
  - platform: homeassistant
    event: start
    id: ha
  condition:
  - condition: or
    conditions:
    - condition: device
      type: is_on
      device_id: 18b7a4adcd0750ba7f375a2649829ce9
      entity_id: switch.electric_blanket_left
      domain: switch
    - condition: device
      type: is_on
      device_id: 1bed5c4eac260907e9b9ab83728e2f23
      entity_id: switch.electric_blanket_right
      domain: switch
  - condition: or
    conditions:
    - condition: trigger
      id: time
    - condition: and
      conditions:
      - condition: trigger
        id: ha
      - condition: time
        after: input_datetime.electric_blanket_off
  action:
  - type: turn_off
    device_id: 18b7a4adcd0750ba7f375a2649829ce9
    entity_id: switch.electric_blanket_left
    domain: switch
  - type: turn_off
    device_id: 1bed5c4eac260907e9b9ab83728e2f23
    entity_id: switch.electric_blanket_right
    domain: switch
  mode: single
- id: '1638921226814'
  alias: 'Electric Blanket: Set Time to Turn Off'
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.electric_blanket_time_off_options
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.electric_blanket_time_off_options
      state: None
  - condition: state
    entity_id: switch.electric_blanket
    state: 'on'
  action:
  - service: input_datetime.set_datetime
    target:
      entity_id: input_datetime.electric_blanket_off
    data:
      datetime: '{{ now() + timedelta(minutes=(states(''input_select.electric_blanket_time_off_options'')|int))
        }}'
  mode: single
- id: '1638964435200'
  alias: 'Time: Ready for Bed'
  description: ''
  trigger:
  - platform: time
    at: input_datetime.bedtime
    id: time
  - platform: homeassistant
    event: start
    id: ha
  - platform: state
    id: arrive_home
    for:
      hours: 0
      minutes: 5
      seconds: 0
    entity_id: person.rosemary_orchard
    to: home
  condition:
  - condition: state
    entity_id: person.rosemary_orchard
    state: home
  - condition: or
    conditions:
    - condition: trigger
      id: time
    - condition: and
      conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: ha
        - condition: trigger
          id: arrive_home
      - condition: time
        after: input_datetime.bedtime
  action:
  - service: script.ready_for_bed
    data: {}
  mode: single
- id: '1639324749442'
  alias: Bedside Button Right
  description: ''
  use_blueprint:
    path: Drafted/aqara-buttons-all-in-one-zigbee2mqtt.yaml
    input:
      action_sensor: sensor.bedside_button_right_action
      single_action:
      - service: script.time_to_sleep
        data: {}
      double_action:
      - service: script.morning
        data: {}
      tripple_action: []
      hold_action:
      - service: script.1647054809832
        data: {}
- id: '1639983872054'
  alias: Alarm Clock Off
  description: ''
  trigger:
  - platform: time
    at: input_datetime.alarm_time
  condition:
  - condition: state
    entity_id: binary_sensor.alarm_clock_status
    state: 'off'
  action:
  - delay:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
  - service: input_select.select_first
    target:
      entity_id: input_select.manual_alarm_setting
  - service: input_datetime.set_datetime
    target:
      entity_id: input_datetime.alarm_time
    data:
      time: 08:30:00
  mode: single
- id: '1640015289914'
  alias: 'Kitchen Light Switch: Log Light Level'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: acc4a5ee208fc12a0adcdf15157a3430
    type: action
    subtype: single
    discovery_id: 0x00158d0005cfa481 action_single
  condition: []
  action:
  - service: notify.log_file
    data:
      title: Kitchen Light Switch
      message: '{{ states(''sensor.kitchen_light_sensor_illuminance_lux'') }}'
  mode: single
- id: '1640175607133'
  alias: Create Groups
  description: ''
  trigger:
  - platform: time
    at: 00:00
  - platform: homeassistant
    event: start
  - platform: event
    event_type: call_service
    event_data:
      domain: group
      service: reload
  action:
  - service: group.set
    data:
      object_id: all_temperature_sensors
      entities: "{{ states.sensor | selectattr(\"entity_id\", \"search\", \"temperature\")\n
        \   | rejectattr(\"entity_id\", \"search\", \"window\") | map(attribute=\"entity_id\")\n
        \   | list }}\n"
  mode: single
- id: '1641302320853'
  alias: New MQTT Device Notification
  description: ''
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/bridge/event
    payload: device_joined
    value_template: '{{ value_json.type }}'
  condition: []
  action:
  - service: notify.standard
    data:
      title: New MQTT Device
      message: '{{ trigger }}'
  mode: single
- id: '1641302321669'
  alias: New MQTT Device
  description: ''
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/bridge/event
    payload: device_joined
    value_template: '{{ value_json.type }}'
  condition: []
  action:
  - service: notify.standard
    data:
      title: New MQTT Device
      message: '{{ trigger }}'
  mode: single
- id: '1642011152569'
  alias: Heating On and Off with Windows/Doors
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bedroom_window_contact
    id: bedroom
  - platform: state
    entity_id: binary_sensor.kitchen_window_contact
    id: kitchen
  - platform: state
    entity_id: binary_sensor.office_window_contact
    id: office
  - platform: state
    entity_id: binary_sensor.living_room_door_contact
    id: lounge
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != trigger.from_state.state }}'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: bedroom
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: binary_sensor.bedroom_window_contact
            state: 'off'
          sequence:
          - service: climate.turn_off
            target:
              entity_id: climate.bedroom_thermostat
            data: {}
        - conditions:
          - condition: state
            entity_id: binary_sensor.bedroom_window_contact
            state: 'on'
          sequence:
          - service: climate.turn_on
            target:
              entity_id: climate.bedroom_thermostat
            data: {}
            enabled: false
        default: []
    - conditions:
      - condition: trigger
        id: office
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: binary_sensor.office_window_contact
            state: 'off'
          sequence:
          - service: climate.turn_off
            target:
              entity_id:
              - climate.office_thermostat
            data: {}
        - conditions:
          - condition: state
            entity_id: binary_sensor.office_window_contact
            state: 'on'
          sequence:
          - service: climate.turn_on
            target:
              entity_id:
              - climate.office_thermostat
            data: {}
            enabled: false
    - conditions:
      - condition: trigger
        id: lounge
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: binary_sensor.patio_door_contact
            state: 'off'
          sequence:
          - service: climate.turn_off
            target:
              entity_id:
              - climate.living_room
            data: {}
        - conditions:
          - condition: state
            entity_id: binary_sensor.patio_door_contact
            state: 'on'
          sequence:
          - service: climate.turn_on
            target:
              entity_id:
              - climate.living_room
            data: {}
            enabled: false
    default: []
  - choose:
    - conditions:
      - condition: template
        value_template: trigger.to_state.state == 'on'
      sequence:
      - service: climate.turn_on
        target:
          entity_id: climate.hallway
        data: {}
        enabled: false
    default:
    - service: climate.turn_off
      target:
        entity_id: climate.hallway
      data: {}
  mode: single
- id: '1642093056261'
  alias: 'Bedroom: Occupied'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bedroom_occupied
    to: 'on'
    id: 'on'
  - platform: state
    entity_id: binary_sensor.bedroom_occupied
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: 'off'
  - platform: state
    entity_id:
    - binary_sensor.bedroom_tv_is_active
    from: 'off'
    to: 'on'
    id: tv
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.rose_state
      state: Sleep
  - condition: numeric_state
    entity_id: zone.home
    above: 0
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - condition: state
        entity_id: binary_sensor.dark_bedroom
        state: 'on'
      - if:
        - condition: state
          entity_id: media_player.plex_samsung_frame
          state: playing
        then:
        - service: light.turn_on
          data:
            color_temp: 500
            brightness_pct: 100
          target:
            entity_id: light.bedside
        else:
        - service: light.turn_on
          target:
            area_id: bedroom
          data:
            color_temp: 500
            brightness_pct: 100
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - service: light.turn_off
        target:
          area_id: bedroom
        data: {}
      - if:
        - condition: state
          entity_id: input_datetime.bedtime
          state: 'on'
        then:
        - service: light.turn_off
          data: {}
          target:
            entity_id: light.bedroom_overhead
        else:
        - service: light.turn_off
          target:
            area_id: bedroom
          data: {}
    - conditions:
      - condition: trigger
        id: tv
      sequence:
      - service: light.turn_off
        data:
          transition: 3
        target:
          entity_id: light.bedroom_overhead
    default: []
  mode: restart
- id: '1642202159359'
  alias: 'Bathroom: Occupied'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bathroom_occupied
    from: 'on'
    to: 'off'
  - platform: state
    entity_id: binary_sensor.bathroom_occupied
    from: 'off'
    to: 'on'
  condition:
  - condition: numeric_state
    entity_id: zone.home
    above: 0
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.bathroom_occupied
        state: 'on'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          area_id: bathroom
    default:
    - service: light.turn_off
      data: {}
      target:
        area_id: bathroom
  mode: restart
- id: '1642203793357'
  alias: 'Hallway: Occupied'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.hallway_occupied
    to: 'on'
    id: 'on'
  - platform: state
    entity_id: binary_sensor.hallway_occupied
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: 'off'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.rose_state
      state: Sleep
  - condition: numeric_state
    entity_id: zone.home
    above: 0
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: light.turn_on
        target:
          area_id: hallway
        data: {}
    default:
    - service: light.turn_off
      target:
        area_id: hallway
      data: {}
  mode: restart
- id: '1642872343180'
  alias: Patio Door Lock Adjusts Blinds
  description: ''
  trigger:
  - id: lock
    platform: state
    entity_id: lock.patio_door_right
    from: unlocked
    to: locked
  - id: unlock
    platform: state
    entity_id: lock.patio_door_right
    from: locked
    to: unlocked
  condition:
  - condition: numeric_state
    entity_id: sensor.ha_uptime_seconds
    above: '30'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: lock
      sequence:
      - service: script.lounge_blinds_close
        data: {}
      - if:
        - condition: state
          entity_id: binary_sensor.dark_lounge
          state: 'on'
        then:
        - service: cover.close_cover
          data: {}
          target:
            entity_id: cover.lounge_curtain
    - conditions:
      - condition: trigger
        id: unlock
      sequence:
      - service: script.going_out
        data: {}
      - if:
        - condition: state
          entity_id: binary_sensor.dark_lounge
          state: 'on'
        then:
        - service: light.turn_on
          data: {}
          target:
            entity_id: light.living_room_main_lights
    default: []
  mode: single
- id: '1646789432062'
  alias: Bedside Button Left
  description: ''
  use_blueprint:
    path: Drafted/aqara-buttons-all-in-one-zigbee2mqtt.yaml
    input:
      action_sensor: sensor.bedside_button_left_action
      single_action:
      - service: script.time_to_sleep
        data: {}
      double_action:
      - service: script.morning
        data: {}
      tripple_action: []
      hold_action:
      - service: script.1647054809832
        data: {}
- id: '1647144789366'
  alias: Office Ikea Remote
  description: ''
  use_blueprint:
    path: Computerfreak14/Z2M-IKEA-STYRBAR-remote.yaml
    input:
      remote: sensor.office_controller_action
      target_light:
        area_id: office
      button_right:
      - service: input_select.select_option
        data:
          option: Office
        target:
          entity_id: input_select.heating_pad_selector
      - service: input_boolean.toggle
        data: {}
        target:
          entity_id: input_boolean.office_heating_pad_controller
      button_left:
      - service: script.office_background_lighting
        data: {}
- id: '1647314628733'
  alias: Home Assistant Start/Shutdown Notifications
  description: ''
  trigger:
  - platform: homeassistant
    event: start
    id: start
  - platform: homeassistant
    event: shutdown
    id: shutdown
  condition: []
  action:
  - service: telegram_bot.send_message
    data:
      message: Home Assistant {{ trigger.id }}
      message_tag: ha_{{ trigger.id }}
  - if:
    - condition: trigger
      id: start
    then:
    - service: telegram_bot.delete_message
      data:
        message_id: '{{ states(''sensor.telegram_ha_shutdown'') }}'
        chat_id: '{{ state_attr(''sensor.telegram_ha_shutdown'', ''chat_id'') }}'
  - if:
    - condition: trigger
      id: shutdown
    - condition: not
      conditions:
      - condition: state
        entity_id: sensor.telegram_ha_start
        state: unavailable
      - condition: state
        entity_id: sensor.telegram_ha_start
        state: unknown
    then:
    - service: telegram_bot.delete_message
      data:
        message_id: '{{ states(''sensor.telegram_ha_start'') }}'
        chat_id: '{{ state_attr(''sensor.telegram_ha_start'', ''chat_id'') }}'
  mode: single
- id: '1647568472469'
  alias: Air Fryer Notifications
  description: ''
  trigger:
  - platform: device
    type: turned_on
    device_id: 504791e3476c8a6f699a1e4497146ebf
    entity_id: switch.xiaomi_airfryer_mi_smart_air_fryer_3_5l
    domain: switch
    id: 'On'
  - platform: device
    type: turned_off
    device_id: 504791e3476c8a6f699a1e4497146ebf
    entity_id: switch.xiaomi_airfryer_mi_smart_air_fryer_3_5l
    domain: switch
    id: 'Off'
  - platform: state
    entity_id:
    - sensor.xiaomi_airfryer_turn_pot
    to: TurnPot
    id: Shake
  condition: []
  action:
  - service: notify.standard
    data:
      title: Air Fryer
      message: '{{ trigger.id }}'
  mode: single
- id: '1647568555808'
  alias: Finish Opening Kitchen Blind
  description: ''
  trigger:
  - platform: state
    entity_id: cover.kitchen_blind
    to: '60'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition: []
  action:
  - service: cover.open_cover
    data: {}
    target:
      entity_id: cover.kitchen_blind
  mode: single
- id: '1647648055056'
  alias: Patio Door Button
  description: ''
  use_blueprint:
    path: Stringer/zigbee2mqtt-tuya-4-button-scene-switch-ts0044.yaml
    input:
      button_one_short_press:
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - service: script.leaving_home
        data: {}
      switch: sensor.patio_door_button_action
      button_four_short_press:
      - service: script.open_living_room_blinds
        data: {}
- id: '1647823092985'
  alias: Sonos Roaming Speaker
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.sonos_roam_power
    id: charging
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id: binary_sensor.sonos_roam_power
    id: battery
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: battery
      sequence:
      - type: turn_on
        device_id: 300dfd08c9c7b6e00df2e5dfa66a87bb
        entity_id: switch.sonos_sonos_roam_status_light
        domain: switch
      - service: media_player.volume_set
        data:
          volume_level: 0.35
        target:
          device_id: 300dfd08c9c7b6e00df2e5dfa66a87bb
    - conditions:
      - condition: trigger
        id: charging
      sequence:
      - service: media_player.volume_set
        data:
          volume_level: 0.25
        target:
          entity_id: media_player.sonos_roam
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - type: turn_off
        device_id: 300dfd08c9c7b6e00df2e5dfa66a87bb
        entity_id: switch.sonos_sonos_roam_status_light
        domain: switch
      - wait_for_trigger:
        - platform: state
          entity_id:
          - media_player.sonos_roam
          attribute: queue_position
        timeout:
          hours: 0
          minutes: 3
          seconds: 0
          milliseconds: 0
      - service: media_player.media_pause
        data: {}
        target:
          entity_id: media_player.sonos_roam
    default: []
  mode: single
- id: '1649896039545'
  alias: Air Freshener
  description: ''
  trigger:
  - platform: state
    entity_id: switch.bedroom_air_freshener
    id: bedroom_on
    for:
      hours: 0
      minutes: 5
      seconds: 0
    to: 'on'
  - platform: state
    entity_id:
    - switch.living_room_air_freshener
    id: lounge_on
    for:
      hours: 0
      minutes: 5
      seconds: 0
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: bedroom_on
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.bedroom_air_freshener
    - conditions:
      - condition: trigger
        id: lounge_on
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.living_room_air_freshener
    default: []
  mode: queued
- id: '1649905687522'
  alias: 'Office: Occupied'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.presence_office
    id: 'on'
    from: 'off'
    to: 'on'
  - platform: state
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    id: 'off'
    entity_id:
    - binary_sensor.office_occupancy
    from: 'on'
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: trigger
        id: 'on'
      - condition: state
        entity_id: binary_sensor.dark_office
        state: 'on'
      - condition: not
        conditions:
        - condition: state
          entity_id: input_select.rose_state
          state: Sleep
    - condition: trigger
      id: 'off'
  - condition: not
    conditions:
    - condition: state
      entity_id: input_select.rose_state
      state: Sleep
  - condition: numeric_state
    entity_id: zone.home
    above: 0
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - condition: and
        conditions:
        - condition: trigger
          id: 'on'
        - condition: state
          entity_id: binary_sensor.dark_office
          state: 'on'
      - service: light.turn_on
        data: {}
        target:
          area_id: office
    default:
    - service: light.turn_off
      data: {}
      target:
        area_id: office
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.office_heating_pad_controller
  mode: restart
- id: '1650809348592'
  alias: 'Button: Shower'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.shower_button_action
    not_to: ''
    enabled: false
  - platform: device
    domain: mqtt
    device_id: b9531ea13c8705b12750518ec64b3103
    type: action
    subtype: single
    discovery_id: 0x00158d00028a957c action_single
    id: single
  - platform: device
    domain: mqtt
    device_id: b9531ea13c8705b12750518ec64b3103
    type: action
    subtype: hold
    discovery_id: 0x00158d00028a957c action_hold
    id: hold
  - platform: device
    domain: mqtt
    device_id: b9531ea13c8705b12750518ec64b3103
    type: action
    subtype: double
    discovery_id: 0x00158d00028a957c action_double
    id: double
  condition: []
  action:
  - service: notify.standard
    data:
      message: '{{ trigger }}'
      title: Title
    enabled: false
  - service: notify.telegram
    data:
      message: '{{ trigger.id }}'
    enabled: false
  - condition: device
    device_id: 300dfd08c9c7b6e00df2e5dfa66a87bb
    domain: media_player
    entity_id: media_player.sonos_roam
    type: is_playing
    enabled: false
  - service: script.showering
    data: {}
    enabled: true
  mode: single
- id: '1651022732028'
  alias: Under Bed Sensors
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.under_bed_sensors
    from: 'off'
    to: 'on'
    id: 'on'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.rose_state
      state: Sleep
    - condition: state
      entity_id: binary_sensor.dark_bedroom
      state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.rose_state
        state: Sleep
      sequence:
      - service: light.turn_on
        data:
          rgb_color:
          - 235
          - 77
          - 61
          brightness_pct: 25
        target:
          device_id: cb0c08a4a64ac0fee60aca7d07b961c8
      - service: light.turn_on
        data:
          transition: 10
          brightness_pct: 100
        target:
          device_id: cb0c08a4a64ac0fee60aca7d07b961c8
    default:
    - service: light.turn_on
      data:
        color_temp: 500
        brightness_pct: 100
      target:
        device_id: cb0c08a4a64ac0fee60aca7d07b961c8
  mode: single
- id: '1652406248926'
  alias: 3D Printer Lights
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.3d_printer_monitor
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.3d_printer_lights
  mode: single
- id: '1656101321518'
  alias: Update living room lights scene
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: -00:45:00
  condition:
  - condition: state
    entity_id: binary_sensor.television_active
    state: 'on'
  action:
  - service: scene.create
    data:
      scene_id: living_room_lights
      entities: {}
  mode: single
- id: '1656545964922'
  alias: Alarm Clock
  description: ''
  trigger:
  - platform: time
    at: input_datetime.alarm_time
    enabled: false
  - platform: template
    value_template: '{{ is_state(''sensor.alarm_clock_timestamp'', now()) }}'
    enabled: false
  - platform: event
    event_type: alarm_clock_ran
    enabled: true
  - platform: event
    event_type: wake_up
    id: phone_alarm
    enabled: false
  - platform: time
    at: 08:00:00
    enabled: false
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.alarm_clock_status
      state: 'on'
    - condition: trigger
      id: phone_alarm
    enabled: false
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
    enabled: false
  - condition: state
    entity_id: person.rosemary_orchard
    state: home
  action:
  - service: input_datetime.set_datetime
    data:
      datetime: '{{ now() }}'
    target:
      entity_id: input_datetime.alarm_clock_ran
  - service: light.turn_on
    data:
      transition: 60
      rgb_color:
      - 255
      - 38
      - 0
      brightness_pct: 5
    target:
      entity_id: light.wake_up
  - parallel:
    - service: script.1651066903184
      data: {}
      enabled: false
    - service: script.wake_up_lights
      data: {}
    - service: cover.open_cover
      data: {}
      target:
        entity_id: cover.bedroom_blind
    - service: rest_command.alarm_clock_music
      data: {}
      enabled: false
  - service: script.morning
    data: {}
  mode: single
- id: '1656559517103'
  alias: Turn on Christmas Boolean
  description: ''
  trigger:
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.christmas
        state: 'off'
      - condition: or
        conditions:
        - condition: template
          value_template: '{{ (now().month | int) == 12 }}'
        - condition: template
          value_template: '{{ (now().month | int) == 1 and (now().day | int) <= 6
            }}'
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.christmas
        data: {}
    - conditions:
      - condition: state
        entity_id: input_boolean.christmas
        state: 'off'
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.christmas
    default: []
  mode: single
- id: '1656698695020'
  alias: iOS Today Lighting
  description: ''
  trigger:
  - platform: calendar
    event: start
    offset: '-1:15:0'
    entity_id: calendar.ios_today
    id: Cooldown
  - platform: calendar
    event: start
    offset: -0:15:0
    entity_id: calendar.ios_today
    id: Start
  - platform: calendar
    event: start
    offset: -0:5:0
    entity_id: calendar.ios_today
    id: Curtains
  condition:
  - condition: state
    entity_id: person.rosemary_orchard
    state: home
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Cooldown
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.lava_lamp
    - conditions:
      - condition: trigger
        id: Start
      sequence:
      - service: script.office_background_lighting
        data: {}
      - if:
        - condition: template
          value_template: '{{ state_attr(''sun.sun'', ''next_setting'') | as_datetime
            < trigger.calendar_event.end | as_datetime }}'
        then:
        - service: cover.close_cover
          data: {}
          target:
            area_id: office
      - if:
        - condition: state
          entity_id: fan.dehumidifier
          state: 'on'
        then:
        - service: fan.turn_off
          data: {}
          target:
            entity_id: fan.dehumidifier
    - conditions:
      - condition: trigger
        id: Curtains
      sequence:
      - if:
        - condition: template
          value_template: "{{ state_attr('sun.sun', 'next_setting') | as_datetime
            <\n                  trigger.calendar_event.end | as_datetime }}"
        then:
        - service: cover.close_cover
          data: {}
          target:
            area_id: office
    default: []
  mode: single
- id: '1657132299772'
  alias: Reset Microwave Clock
  description: ''
  trigger:
  - platform: time
    at: 00:58:00
    id: 'off'
    enabled: false
  - platform: time
    at: 01:00:00
    id: 'on'
  - platform: time_pattern
    hours: '0'
    minutes: '58'
    seconds: '0'
    id: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.reset_microwave_clock
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.microwave_turned_off
        enabled: false
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.microwave
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.microwave_turned_off
        enabled: false
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.microwave
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.reset_microwave_clock
    default: []
  - service: notify.telegram
    data:
      message: Microwave {{ trigger.id }}
  mode: queued
  max: 2
- id: '1657494562702'
  alias: Intercom Rings
  description: ''
  trigger:
  - type: turned_on
    platform: device
    device_id: e5563b10105c02d8be6ce13124b25b97
    entity_id: binary_sensor.nuki_main_door_ring_action
    domain: binary_sensor
  condition: []
  action:
  - service: cover.open_cover
    data: {}
    target:
      entity_id: cover.hall_curtain
  - service: lock.unlock
    data: {}
    target:
      entity_id: lock.nuki_main_door_lock
  mode: single
- id: '1661189868195'
  alias: UPS Power Outage
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.ha_ups_status
    from: offline
    to: online
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition: []
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.reset_microwave_clock
  mode: single
- id: '1661189939519'
  alias: Microwave Turned Off
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.microwave
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 3
      seconds: 0
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.microwave
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.reset_microwave_clock
  mode: single
- id: '1661380464540'
  alias: Bedroom Plex
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.plex_samsung_frame
    to: playing
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: 'on'
  - platform: state
    entity_id:
    - media_player.plex_samsung_frame
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: 'off'
    from: playing
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: light.turn_off
        data:
          transition: 10
        target:
          entity_id: light.bedroom_overhead
      - service: script.1647054809832
        data: {}
    default: []
  mode: single
- id: '1661380472018'
  alias: Bedroom Plex
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.plex_samsung_frame
    to: playing
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: 'on'
  - platform: state
    entity_id:
    - media_player.plex_samsung_frame
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: 'off'
    from: playing
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: light.turn_off
        data:
          transition: 10
        target:
          entity_id: light.bedroom_overhead
    default: []
  mode: single
- id: '1661895105995'
  alias: Cube 1
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.cube_1_action
    from: ''
    to: shake
    id: shake
  - platform: state
    entity_id:
    - sensor.cube_1_action
    from: ''
    to: fall
    id: fall
  - platform: state
    entity_id:
    - sensor.cube_1_action
    from: ''
    to: tap
    id: tap
  - platform: state
    entity_id:
    - sensor.cube_1_action
    from: ''
    to: flip180
    id: flip180
  - platform: state
    entity_id:
    - sensor.cube_1_action
    from: ''
    to: flip90
    id: flip90
  - platform: state
    entity_id:
    - sensor.cube_1_action
    from: ''
    to: rotate_left
    id: rotate_left
  - platform: state
    entity_id:
    - sensor.cube_1_action
    from: ''
    to: rotate_right
    id: rotate_right
  - platform: state
    entity_id:
    - sensor.cube_1_action
    from: ''
    to: slide
    id: slide
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: shake
      sequence: []
    - conditions:
      - condition: trigger
        id: shake
      sequence: []
    - conditions:
      - condition: trigger
        id: tap
      sequence: []
    - conditions:
      - condition: trigger
        id: flip180
      sequence: []
    - conditions:
      - condition: trigger
        id: flip90
      sequence: []
    - conditions:
      - condition: trigger
        id: rotate_left
      sequence: []
    - conditions:
      - condition: trigger
        id: rotate_right
      sequence: []
    - conditions:
      - condition: trigger
        id: slide
      sequence: []
    default: []
  mode: single
- id: '1661895146004'
  alias: Cube 2
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.cube_2_action
    from: ''
    to: shake
    id: shake
  - platform: state
    entity_id:
    - sensor.cube_2_action
    from: ''
    to: fall
    id: fall
  - platform: state
    entity_id:
    - sensor.cube_2_action
    from: ''
    to: tap
    id: tap
  - platform: state
    entity_id:
    - sensor.cube_2_action
    from: ''
    to: flip180
    id: flip180
  - platform: state
    entity_id:
    - sensor.cube_2_action
    from: ''
    to: flip90
    id: flip90
  - platform: state
    entity_id:
    - sensor.cube_2_action
    from: ''
    to: rotate_left
    id: rotate_left
  - platform: state
    entity_id:
    - sensor.cube_2_action
    from: ''
    to: rotate_right
    id: rotate_right
  - platform: state
    entity_id:
    - sensor.cube_2_action
    from: ''
    to: slide
    id: slide
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: shake
      sequence: []
    - conditions:
      - condition: trigger
        id: shake
      sequence: []
    - conditions:
      - condition: trigger
        id: tap
      sequence: []
    - conditions:
      - condition: trigger
        id: flip180
      sequence: []
    - conditions:
      - condition: trigger
        id: flip90
      sequence: []
    - conditions:
      - condition: trigger
        id: rotate_left
      sequence: []
    - conditions:
      - condition: trigger
        id: rotate_right
      sequence: []
    - conditions:
      - condition: trigger
        id: slide
      sequence: []
    default: []
  mode: single
- id: '1663807911687'
  alias: Update Battery Groups
  description: ''
  trigger:
  - platform: time
    at: 00:00:00
  - platform: homeassistant
    event: start
  - platform: event
    event_type: event_mqtt_reloaded
  - platform: mqtt
    topic: zigbee2mqtt/bridge/event
    payload: device_joined
  condition: []
  action:
  - service: group.set
    data:
      object_id: personal_device_batteries
      name: Personal Device Batteries
      entities: '{% set mobile_app_battery_entities = integration_entities(''mobile_app'')
        | select(''search'', ''battery'') | list %} {% set icloud_battery_entities
        = integration_entities(''icloud'') | select(''search'', ''battery'') | list
        %}  {% set device_batteries = area_entities(''Devices'') | select(''search'',''battery'')
        | list %} {{ mobile_app_battery_entities + icloud_battery_entities + device_batteries
        }}'
  - service: group.set
    data:
      object_id: ups_batteries
      name: UPS Batteries
      entities: '{% set nut_battery_entities = integration_entities(''Network UPS
        Tools (NUT)'') | select(''search'', ''battery'') | list %} {% set amazon_battery_entities
        = integration_entities(''mobile_app'') | select(''search'', ''amazon'') |
        list %} {{ nut_battery_entities + amazon_battery_entities }}'
  - service: group.set
    data:
      object_id: rechargeable_batteries
      name: Rechargeable Batteries
      entities:
      - sensor.doorbell_battery
      - sensor.bedroom_blind_battery
      - sensor.kitchen_blind_battery
      - sensor.office_blind_battery
      - sensor.storage_cupboard_camera_battery
      - sensor.vertical_open_battery
      - sensor.vertical_rotate_battery
  - service: group.set
    data:
      object_id: replaceable_batteries
      name: Replaceable Batteries
      entities: '{% set ups_batteries = expand(''group.ups_batteries'') | map(attribute="entity_id")
        | list %} {% set rechargeable_batteries = expand(''group.rechargeable_batteries'')
        | map(attribute="entity_id") | list %} {% set personal_device_batteries =
        expand(''group.personal_device_batteries'') | map(attribute="entity_id") |
        list %} {% set battery_sensors = states.sensor|selectattr(''attributes.device_class'',
        ''defined'')|selectattr(''attributes.device_class'',''eq'',''battery'')|list
        %} {{ battery_sensors | rejectattr(''entity_id'', ''in'', ups_batteries) |
        rejectattr(''entity_id'', ''in'', rechargeable_batteries) | rejectattr(''entity_id'',
        ''in'', personal_device_batteries) | rejectattr(''entity_id'', ''in'', battery_sensors)
        | map(attribute="entity_id") | list }}'
  mode: single
- id: '1664564496373'
  alias: Office Hue Button
  description: ''
  trigger:
  - device_id: d6466700bb3e5db2d531614834ed9b15
    domain: hue
    platform: device
    type: short_release
    subtype: 1
    unique_id: dfabd8a4-bf69-4d12-a624-e9be30614039
    id: button_1_short
  - device_id: d6466700bb3e5db2d531614834ed9b15
    domain: hue
    platform: device
    type: short_release
    subtype: 2
    unique_id: d7e56fac-d6d2-4226-b462-1c3338e0997a
    id: button_2_short
  - device_id: d6466700bb3e5db2d531614834ed9b15
    domain: hue
    platform: device
    type: short_release
    subtype: 3
    unique_id: 6af8e32e-828e-40ac-b312-5707e38ded02
    id: button_3_short
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: button_1_short
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.office_overhead
    - conditions:
      - condition: trigger
        id: button_2_short
      sequence:
      - device_id: e2d403494e8055b907c1769b4073f9f7
        domain: light
        entity_id: light.office_overhead
        type: brightness_increase
    - conditions:
      - condition: trigger
        id: button_3_short
      sequence:
      - device_id: e2d403494e8055b907c1769b4073f9f7
        domain: light
        entity_id: light.office_overhead
        type: brightness_decrease
  mode: single
- id: '1666348917047'
  alias: Telegram Commands
  description: ''
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /ping
    id: ping
  - platform: event
    event_type: telegram_command
    event_data:
      command: /restart
    id: restart
  - platform: event
    event_type: telegram_command
    event_data:
      command: /reboot
    id: reboot
  - platform: event
    event_type: telegram_command
    event_data:
      command: /info
    id: info
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: ping
      sequence:
      - service: telegram_bot.send_message
        data:
          message: Pong!
          target: '{{ trigger.event.data.chat_id }}'
    - conditions:
      - condition: trigger
        id: restart
      sequence:
      - service: homeassistant.restart
        data: {}
    - conditions:
      - condition: trigger
        id: reboot
      sequence:
      - service: hassio.host_reboot
        data: {}
    - conditions:
      - condition: trigger
        id: info
      sequence:
      - service: telegram_bot.send_message
        data:
          message: 'Uptime: {{ states(''sensor.uptime'') | as_datetime | relative_time
            }}'
          target: '{{ trigger.event.data.chat_id }}'
    default: []
  mode: single
- id: '1666779526243'
  alias: Front Door Curtain
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.front_door_contact
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 30
    id: close
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: close
      sequence:
      - service: cover.close_cover
        data: {}
        target:
          entity_id:
          - cover.curtain_front_door
          - cover.hall_curtain
  mode: single
- id: '1667444022709'
  alias: Dehumidifier
  description: ''
  trigger:
  - platform: state
    entity_id:
    - fan.dehumidifier
    attribute: preset_mode
    to: Laundry
    id: Laundry Start
  - platform: state
    entity_id:
    - timer.drying_laundry
    from: active
    to: idle
    id: Laundry Done
  - platform: state
    entity_id:
    - fan.dehumidifier
    from: 'on'
    to: 'off'
    id: Pause Timer
  - platform: state
    entity_id:
    - fan.dehumidifier
    from: 'off'
    to: 'on'
    id: Resume Timer
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Laundry Start
      sequence:
      - service: timer.start
        data: {}
        target:
          entity_id: timer.drying_laundry
    - conditions:
      - condition: trigger
        id: Laundry Done
      sequence:
      - service: fan.set_preset_mode
        data:
          preset_mode: Low
        target:
          entity_id: fan.dehumidifier
    - conditions:
      - condition: trigger
        id: Pause Timer
      sequence:
      - condition: state
        entity_id: fan.dehumidifier
        attribute: preset_mode
        state: Laundry
      - service: timer.pause
        data: {}
        target:
          entity_id: timer.drying_laundry
    - conditions:
      - condition: trigger
        id: Resume Timer
      sequence:
      - condition: state
        entity_id: fan.dehumidifier
        attribute: preset_mode
        state: Laundry
      - service: timer.start
        data: {}
        target:
          entity_id: timer.drying_laundry
  mode: single
- id: '1667825871252'
  alias: Update Automatic Groups
  description: If removing a group from here, should probably delete it too.
  trigger:
  - platform: time
    at: 00:00:00
  - platform: homeassistant
    event: start
  - platform: homeassistant
    event: shutdown
    id: Shutdown
  condition: []
  action:
  - if:
    - condition: trigger
      id: Shutdown
    then:
    - service: notify.standard
      data:
        title: Updated Zigbee Devices
        message: '{{ expand(''group.zigbee_devices_checked'') | map(attribute=''entity_id'')
          | list }}'
      enabled: false
    else:
    - service: group.set
      data:
        object_id: zigbee_devices_checked
        name: Zigbee Devices Checked
        entities:
        - cover.bedroom_blind
        - cover.office_blind
        - cover.kitchen_blind
        - cover.vertical_open
        - cover.vertical_rotate
        - binary_sensor.motion_sensor_bathroom_occupancy
        - binary_sensor.dishwasher_door_contact
        - binary_sensor.washing_machine_door_contact
        - binary_sensor.tumble_dryer_door_contact
        - binary_sensor.kitchen_door_contact
        - binary_sensor.bathroom_door_contact
        - binary_sensor.hallway_motion_sensor_occupancy
        - binary_sensor.hallway_letter_box_vibration
        - binary_sensor.front_door_contact
        - sensor.hallway_climate_sensor_temperature
        - sensor.bathroom_climate_sensor_temperature
        - sensor.bedroom_light_sensor_illuminance_lux
        - sensor.bedside_button_left_action
        - sensor.bedside_button_right_action
        - binary_sensor.patio_door_contact
        - sensor.kitchen_climate_sensor_temperature
        - sensor.kitchen_light_sensor_illuminance_lux
  - service: group.set
    data:
      object_id: ikea_buttons_to_move
      name: Ikea Buttons to Move
      entities: '{% set ns = namespace(items=[],device_list=[],entity_list=[]) -%}
        {% set device_list = integration_entities(''mqtt'') | select(''search'', ''battery'')
        | list %} {%- for device in device_list -%} {%- if "E1812" in device_attr(device,
        ''model'') or "E1766" in device_attr(device, ''model'') -%} {% set ns.items
        = ns.items + [device] %} {%- endif -%} {%- endfor -%} {% set button_list =
        integration_entities(''mqtt'') | select(''search'', ''battery'')  | select(''search'',
        ''button'') | list %} {% set remote_list = integration_entities(''mqtt'')
        | select(''search'', ''battery'')  | select(''search'', ''remote'') | list
        %} {% set ns.items = ns.items + button_list %} {% set ns.items = ns.items
        + remote_list %} {% set ns.items = ns.items | unique | list %} {%- for device
        in ns.items -%} {%- set manufacturer = device_attr(device, ''manufacturer'')
        -%} {%- if manufacturer == "IKEA" -%} {%- set ns.device_list = ns.device_list
        + [device_attr(device, ''name'')] -%} {%- set ns.entity_list = ns.entity_list
        + [device] -%} {%- endif -%} {%- endfor -%} {{ ns.entity_list }}'
  - service: group.set
    data:
      object_id: zigbee_devices_checked_batteries
      name: Batteries of Zigbee Devices Checked
      entities: '{%- set ns = namespace(batteries=[]) -%} {% set device_list = expand(''group.zigbee_devices_checked'')
        | map(attribute=''entity_id'') | list %} {%- for device in device_list -%}
        {%- set device_attr = device_entities(device_id(device)) %} {%- set battery
        = expand(device_attr) | selectattr(''entity_id'', ''is_state_attr'', ''device_class'',
        ''battery'') | map(attribute=''entity_id'') | first -%} {%- set ns.batteries
        = ns.batteries + [battery] -%} {%- endfor -%} {{ ns.batteries }}'
  - service: group.set
    data:
      object_id: energy_cost_sensors
      entities: "{% set energy_sensors = states.sensor | selectattr('entity_id',\n
        \   'search', '_cost_today$') | list %}\n\n    {% set energy_sensors = energy_sensors
        + states.sensor |\n    selectattr('entity_id', 'search', '_standing_charge$')
        | list %}\n\n    {{ energy_sensors | map(attribute='entity_id') | list |\n
        \   join(',') }}"
  - service: group.set
    data:
      object_id: energy_cost_source_sensors
      entities: "{% set energy_sensors = states.sensor | selectattr('entity_id',\n
        \   'search', '_cost_today$') | list %}\n\n    {% set energy_sensors = energy_sensors
        + states.sensor |\n    selectattr('entity_id', 'search', '_standing_charge$')
        | list %}\n\n    {{ energy_sensors | selectattr('attributes.Source', 'defined')
        | map(attribute='attributes.Source') | list |\n    join(',') }}"
  mode: single
- id: '1668299036595'
  alias: Open the Bedroom Curtains
  description: ''
  trigger:
  - platform: state
    entity_id:
    - cover.bedroom_blind
    to: open
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - service: cover.open_cover
    data: {}
    target:
      entity_id: cover.bedroom_curtain
  mode: single
- id: '1668309960319'
  alias: Electric blanket timeout
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.electric_blanket
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_select.rose_state
    state: Sleep
  action:
  - service: input_select.select_last
    data: {}
    target:
      entity_id: input_select.electric_blanket_time_off_options
  mode: single
- id: '1668994453213'
  alias: Christmas Tree
  description: ''
  trigger:
  - platform: time
    at: 09:40:00
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    entity_id: person.rosemary_orchard
    state: home
  action:
  - service: light.turn_on
    data:
      effect: Christmas Tree
      rgb_color:
      - 181
      - 26
      - 0
    target:
      entity_id: light.neopixel_christmas_tree
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.christmas_snowflakes
  mode: single
- id: '1670172721752'
  alias: Kitchen Light Turns off Cabinet Lights
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.kitchen
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.kitchen_cabinet_lights
  mode: single
- id: '1670366184178'
  alias: Wardrobe Lights On
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.wardrobe_door_right_contact
    - binary_sensor.wardrobe_door_centre_contact
    - binary_sensor.wardrobe_door_left_contact
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.wardrobe_lights
  mode: single
- id: '1670366291807'
  alias: Wardrobe Lights Off
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.wardrobe_door_right_contact
    - binary_sensor.wardrobe_door_centre_contact
    - binary_sensor.wardrobe_door_left_contact
    from: 'on'
    to: 'off'
  condition:
  - condition: state
    entity_id: binary_sensor.wardrobe_door_right_contact
    state: 'off'
  - condition: state
    entity_id: binary_sensor.wardrobe_door_centre_contact
    state: 'off'
  - condition: state
    entity_id: binary_sensor.wardrobe_door_left_contact
    state: 'off'
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.wardrobe_lights
  mode: single
- id: '1670368489357'
  alias: Front Door Button
  description: ''
  use_blueprint:
    path: Stringer/zigbee2mqtt-tuya-4-button-scene-switch-ts0044.yaml
    input:
      switch: sensor.front_door_button_action
      button_four_long_press: []
      button_four_short_press:
      - service: fan.set_preset_mode
        data:
          preset_mode: Laundry
        target:
          entity_id: fan.dehumidifier
- id: '1670438139605'
  alias: Christmas Lights On
  description: ''
  trigger:
  - platform: time
    at: 08:00:00
  condition: []
  action:
  - service: light.turn_on
    data: {}
    target:
      area_id: christmas
  mode: single
- id: '1670466577938'
  alias: Bedside Buttons
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.bedside_button_door_action
    - sensor.bedside_button_left_action
  condition:
  - condition: template
    value_template: '{{ trigger.to_state != '''' }}'
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state == ''button_1_single''}}'
      sequence:
      - service: script.time_to_sleep
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state == ''button_3_single''}}'
      sequence:
      - service: script.morning
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state == ''button_5_single''}}'
      sequence:
      - service: script.1647054809832
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state == ''button_4_single''}}'
      sequence:
      - service: script.getting_up
        data: {}
  mode: single
- id: '1670478264974'
  alias: Reset Electric Blanket Time Out
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.electric_blanket
    from: 'on'
    to: 'off'
  - platform: state
    entity_id:
    - switch.electric_blanket
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: input_select.select_first
    target:
      entity_id: input_select.electric_blanket_time_off_options
    data: {}
  mode: single
- id: '1670991408406'
  alias: Not at Home
  description: ''
  trigger:
  - platform: time
    at: 08:30:00
    id: Morning
  - platform: time
    at: 09:00:00
    id: Wake Up
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: person.rosemary_orchard
      state: home
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Morning
      sequence:
      - service: script.morning
        data: {}
    - conditions:
      - condition: trigger
        id: Wake Up
      sequence:
      - service: script.getting_up
        data: {}
  mode: single
- id: '1671010475693'
  alias: Schedule the Washing Machine
  description: ''
  trigger:
  - platform: time
    at: input_datetime.start_the_washing_machine
  condition:
  - condition: state
    entity_id: binary_sensor.washing_machine_door_contact
    state: 'off'
  - condition: state
    entity_id: input_select.washing_machine_status
    state: Idle
  action:
  - service: script.start_washing_machine
    data: {}
  mode: single
- id: '1671803691888'
  alias: Telegram Message Info
  description: ''
  trigger:
  - platform: event
    event_type: telegram_sent
  condition:
  - condition: template
    value_template: '{{ iif(trigger.event.data.message_tag, True, False) }}'
  action:
  - service: mqtt.publish
    data:
      topic: telegram_message/info/{{ trigger.event.data.message_tag }}/message_id
      payload: '{{ trigger.event.data.message_id }}'
  - service: mqtt.publish
    data:
      topic: telegram_message/info/{{ trigger.event.data.message_tag }}/attributes
      payload_template: '{"chat_id": {{ trigger.event.data.chat_id }}, "message_id":
        {{ trigger.event.data.message_id }}}'
  mode: parallel
  max: 10
- id: '1672406545847'
  alias: Patio Doorbell
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.doorbell_6_siren_active_3
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: telegram_bot.send_message
    data:
      message: Patio doorbell rang
  mode: single
